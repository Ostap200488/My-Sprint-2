{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/2nd Semester /My Sprint 2/src/components/context/ShoppingCartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShoppingCartContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const ShoppingCartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n\n  // Function to add items to the cart\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      // Check if the item is already in the cart\n      const itemExists = prevItems.find(i => i.id === item.id);\n\n      // If it exists, update the quantity\n      if (itemExists) {\n        return prevItems.map(i => i.id === item.id ? {\n          ...i,\n          quantity: i.quantity + 1\n        } : i);\n      }\n\n      // If it doesn't exist, add the new item\n      return [...prevItems, {\n        ...item,\n        quantity: 1\n      }];\n    });\n  };\n\n  // Function to remove items from the cart\n  const removeFromCart = itemId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  };\n\n  // Function to clear the shopping cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Calculate the total number of items in the cart\n  const cartItemCount = cartItems.reduce((count, item) => count + item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(ShoppingCartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      cartItemCount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the shopping cart context\n_s(ShoppingCartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = ShoppingCartProvider;\nexport const useShoppingCart = () => {\n  _s2();\n  const context = useContext(ShoppingCartContext);\n  if (context === undefined) {\n    throw new Error(\"useShoppingCart must be used within a ShoppingCartProvider\");\n  }\n  return context;\n};\n_s2(useShoppingCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ShoppingCartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","ShoppingCartContext","ShoppingCartProvider","children","_s","cartItems","setCartItems","addToCart","item","prevItems","itemExists","find","i","id","map","quantity","removeFromCart","itemId","filter","clearCart","cartItemCount","reduce","count","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useShoppingCart","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/student/Desktop/2nd Semester /My Sprint 2/src/components/context/ShoppingCartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\n\n// Create the context\nexport const ShoppingCartContext = createContext();\n\n// Provider component\nexport const ShoppingCartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n\n  // Function to add items to the cart\n  const addToCart = (item) => {\n    setCartItems((prevItems) => {\n      // Check if the item is already in the cart\n      const itemExists = prevItems.find((i) => i.id === item.id);\n\n      // If it exists, update the quantity\n      if (itemExists) {\n        return prevItems.map((i) =>\n          i.id === item.id ? { ...i, quantity: i.quantity + 1 } : i\n        );\n      }\n\n      // If it doesn't exist, add the new item\n      return [...prevItems, { ...item, quantity: 1 }];\n    });\n  };\n\n  // Function to remove items from the cart\n  const removeFromCart = (itemId) => {\n    setCartItems((prevItems) => prevItems.filter((item) => item.id !== itemId));\n  };\n\n  // Function to clear the shopping cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Calculate the total number of items in the cart\n  const cartItemCount = cartItems.reduce(\n    (count, item) => count + item.quantity,\n    0\n  );\n\n  return (\n    <ShoppingCartContext.Provider\n      value={{ cartItems, addToCart, removeFromCart, clearCart, cartItemCount }}\n    >\n      {children}\n    </ShoppingCartContext.Provider>\n  );\n};\n\n// Custom hook to use the shopping cart context\nexport const useShoppingCart = () => {\n  const context = useContext(ShoppingCartContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useShoppingCart must be used within a ShoppingCartProvider\"\n    );\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,mBAAmB,gBAAGL,aAAa,CAAC,CAAC;;AAElD;AACA,OAAO,MAAMM,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMU,SAAS,GAAIC,IAAI,IAAK;IAC1BF,YAAY,CAAEG,SAAS,IAAK;MAC1B;MACA,MAAMC,UAAU,GAAGD,SAAS,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;;MAE1D;MACA,IAAIH,UAAU,EAAE;QACd,OAAOD,SAAS,CAACK,GAAG,CAAEF,CAAC,IACrBA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,QAAQ,EAAEH,CAAC,CAACG,QAAQ,GAAG;QAAE,CAAC,GAAGH,CAC1D,CAAC;MACH;;MAEA;MACA,OAAO,CAAC,GAAGH,SAAS,EAAE;QAAE,GAAGD,IAAI;QAAEO,QAAQ,EAAE;MAAE,CAAC,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjCX,YAAY,CAAEG,SAAS,IAAKA,SAAS,CAACS,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKI,MAAM,CAAC,CAAC;EAC7E,CAAC;;EAED;EACA,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBb,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;;EAED;EACA,MAAMc,aAAa,GAAGf,SAAS,CAACgB,MAAM,CACpC,CAACC,KAAK,EAAEd,IAAI,KAAKc,KAAK,GAAGd,IAAI,CAACO,QAAQ,EACtC,CACF,CAAC;EAED,oBACEf,OAAA,CAACC,mBAAmB,CAACsB,QAAQ;IAC3BC,KAAK,EAAE;MAAEnB,SAAS;MAAEE,SAAS;MAAES,cAAc;MAAEG,SAAS;MAAEC;IAAc,CAAE;IAAAjB,QAAA,EAEzEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;;AAED;AAAAxB,EAAA,CA9CaF,oBAAoB;AAAA2B,EAAA,GAApB3B,oBAAoB;AA+CjC,OAAO,MAAM4B,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,MAAMC,OAAO,GAAGlC,UAAU,CAACG,mBAAmB,CAAC;EAC/C,IAAI+B,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CACb,4DACF,CAAC;EACH;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CARWD,eAAe;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}